#!/usr/bin/env ERL_LIBS=apps:deps escript

-mode(compile).

-include("../apps/erlmedia/include/video_frame.hrl").

main([Path]) ->
  Root = filename:join(filename:dirname(escript:script_name()), ".."),
  [code:add_pathz(P) || P <- filelib:wildcard(Root ++ "/apps/*/ebin")],
	{ok, F} = file:open(Path, [read,binary,raw]),
	{ok, Reader} = mpegts_reader:init([]),
  loop(F, Reader, []),
  ok.


loop(F, Reader, Buffer) ->
  case file:read(F, 20*188) of
    {ok, Bin} ->
      {ok, Reader1, Frames} = mpegts_reader:decode(Bin, Reader),
      FrameList = Frames ++ Buffer,
      {Show, Save} = if length(FrameList) > 20 -> lists:split(4, video_frame:sort(FrameList));
      true -> {[], FrameList} end,
      [dump_frame(Frame) || Frame <- Show],
      loop(F, Reader1, Save);
    eof ->
      [dump_frame(Frame) || Frame <- Buffer],
      ok
  end.
  
dump_frame(#video_frame{dts = DTS, pts = PTS, codec = Codec}) ->
  case get(first_dts) of undefined -> put(first_dts,DTS),put(dts,DTS); _ -> ok end,
  Delta = round(DTS - get(dts)),
  put(dts,DTS),
  % if Delta > 40 ->
  io:format("~-10.s ~10.. B ~10.. B ~10.. B~n", [Codec, Delta, round(DTS - get(first_dts)), round(PTS - get(first_dts))])
  % ;
  % true -> ok end
  ,
  ok.

  